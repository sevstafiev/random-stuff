Оператор OVER создаёт оконную функцию

ROW_NUMBER присваивает номер каждой выбранной записи:

SELECT
athlete,
event,
ROW_NUMBER() OVER() AS row_number
FROM Summer_Medals
ORDER BY row_number ASC;

SELECT
sport,
ROW_NUMBER() OVER(ORDER BY sport ASC) AS Row_N
FROM (
SELECT DISTINCT sport
FROM Summer_Medals
) AS sports
ORDER BY sport ASC;

PARTITION BY позволяет сгруппировать строки по значению определённого столбца
Этот оператор работает только с оконными функциями типа LAG, LEAD, RANK и т. д.:
	LAG
	Функция LAG берёт строку и возвращает ту, которая шла перед ней
SELECT
Athlete as Champion,
Gender,
Year,
LAG(Athlete) OVER (PARTITION BY gender
ORDER BY Year ASC) AS Last_Champion
FROM Tennis_Gold
ORDER BY Gender ASC, Year ASC;

	LEAD
	Функция LEAD похожа на LAG, но вместо предыдущей строки возвращает следующую.

	RANK
	Оператор RANK похож на ROW_NUMBER, но присваивает одинаковые номера строкам с одинаковыми значениями, а «лишние» номера пропускает
	
	DENSE_RANK
	Как RANK, только не пропускает номеров.
	
DENSE_RANK() OVER(ORDER BY participated DESC) AS Dense_Rank
DENSE_RANK() OVER(ORDER BY participated DESC) AS Dense_Rank